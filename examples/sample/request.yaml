apiVersion: http.crossplane.io/v1alpha2
kind: Request
metadata:
  name: laundry
spec:
  forProvider:
    insecureSkipTLSVerify: true
    waitTimeout: 5m
    headers:
      Content-Type:
        - application/json
      Authorization:
        - ("Bearer {{ auth:default:token }}")
    payload:
      baseUrl: http://todo.default.svc.cluster.local/todos
      body: |
        {
          "name": "Do Laundry", 
          "reminder": "Every 1 hour", 
          "responsible": "Dan",
          "password": "secretdata {{ password:crossplane-system:secretKey }}"
        }
    mappings:
      - method: "POST"
        body: |
          {
            todo_name: .payload.body.name, 
            reminder: .payload.body.reminder, 
            responsible: .payload.body.responsible,
          }
        url: .payload.baseUrl
        headers:
          Content-Type:
            - application/json
          Authorization:
            - ("Bearer {{ auth:default:token }}")
          Extra-Header-For-Post:
            - extra-value
      - method: "GET"
        url: (.payload.baseUrl + "/" + (.response.body.id|tostring))
      - method: "PUT"
        body: |
          {
            todo_name: .payload.body.name, 
            reminder: .payload.body.reminder, 
            responsible: .payload.body.responsible
          }
        url: (.payload.baseUrl + "/" + (.response.body.id|tostring))
      - method: "DELETE"
        url: (.payload.baseUrl + "/" + (.response.body.id|tostring))
    
    # Secrets receiving patches from response data
    secretInjectionConfigs: 
      - secretRef:
          name: response-secret
          namespace: default
        secretKey: extracted-data
        responsePath: .body.reminder
      - secretRef:
          name: response-secret
          namespace: default
        secretKey: extracted-data-headers
        responsePath: .headers.Try[0]
  providerConfigRef:
    name: http-conf
